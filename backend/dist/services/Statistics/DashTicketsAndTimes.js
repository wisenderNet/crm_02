'use strict';
function a() {
    const z = [
        '\x20\x20\x20\x20extrac',
        'R\x20lt.\x22type',
        '\x22createdAt',
        '\x20\x20\x20--ROUND',
        '\x20lt\x20ON\x20lt.',
        's)\x20qtd_tot',
        'c.\x22id\x22))\x0a\x20',
        'al)/60\x20tme',
        'SPFtK',
        'sfer\x27)\x0a\x20\x20)',
        'nantId\x0a\x20\x20\x20',
        '\x20else\x200\x20en',
        'TMA,\x0a\x20\x20\x20\x20c',
        '30687888XcxCre',
        '\x20--ROUND(A',
        'from\x20\x22Cont',
        'group\x20by\x20d',
        '80133CMEpBk',
        'manda_rece',
        'gTickets\x22\x20',
        ')\x20a\x0a\x20\x20\x20\x20--',
        'ceptiva,\x0a\x20',
        '../../data',
        'rtedAttend',
        '1\x20else\x200\x20e',
        '\x20\x20\x20\x20\x20\x20to_t',
        'KE\x20\x27open\x27\x20',
        'td_total_a',
        'At\x22)\x20dt_re',
        'extract(ep',
        'oalesce(co',
        'ect\x0a\x20\x20\x20\x20\x20\x20',
        'tDate\x20and\x20',
        'nda_ativa,',
        'stamp(t.\x22s',
        'enantId\x22\x20=',
        '(\x27month\x27,\x20',
        'emand\x22\x20is\x20',
        'tc\x20ON\x20tc.\x22',
        '.\x22createdA',
        'Date\x0a\x20\x20\x20\x20\x20',
        'concat(ROU',
        '.\x22type\x22\x20LI',
        'endanceAt\x22',
        'ct(epoch\x20f',
        '\x0a\x20\x20\x20\x20\x20\x20and',
        'value',
        '0\x20end\x20qtd_',
        'tedAt\x22)\x20be',
        'reatedAt\x22,',
        'cimal,0)\x20T',
        'rval)/60\x20t',
        '\x0a\x20\x20\x20\x20\x20\x20cas',
        'tendimento',
        '\x20\x20--ROUND(',
        'eceptiva,\x0a',
        'isActiveDe',
        '.\x22tenantId',
        '18642offdMb',
        '\x20\x20\x20\x20\x20to_ti',
        'ticketId\x22\x20',
        '8QvwJjx',
        'GE(to_time',
        't.\x22created',
        '.\x22closedAt',
        'mestamp(t.',
        'd_total_at',
        '\x20\x22Tickets\x22',
        '\x20:tenantId',
        'not\x20true\x20t',
        '(AVG(tme):',
        'tc.\x22userId',
        'p)::interv',
        '\x27month\x27,\x20t',
        'anda_ativa',
        'n\x20:startDa',
        'query',
        'lt\x20ON\x20lt.\x22',
        'estamp(t.\x22',
        'en\x201\x20else\x20',
        'edAt\x22)\x20bet',
        'ere\x0a\x20\x20\x20\x20\x20\x20',
        'e,\x0a\x20\x20\x20\x20\x20\x20t',
        'tId\x22\x20=\x20:te',
        '__esModule',
        '\x20\x20\x20\x20--dt_r',
        '\x22tenantId\x22',
        'nd\x20qtd_dem',
        '/1000),\x20t.',
        '\x20\x20\x20\x20\x20\x20INNE',
        'E,\x0a\x20\x20\x20\x20(se',
        'ma,\x0a\x20\x20\x20\x20\x20\x20',
        't\x22)\x20dt_ref',
        '.\x22ticketId',
        '\x20\x20\x20\x20\x20extra',
        'tween\x20:sta',
        'rder\x20by\x201\x20',
        't\x22)\x20betwee',
        '(distinct(',
        'ncat(ROUND',
        '\x22\x20=\x20tc.\x22id',
        'userId',
        'base',
        'defineProp',
        '\x22type\x22\x20LIK',
        '__importDe',
        'At\x22/1000),',
        'entos,\x0a\x20\x20\x20',
        '\x20t.\x22create',
        'trunc(\x27day',
        'startedAtt',
        'decimal,0)',
        'SELECT',
        'd\x0a\x20\x20\x20\x20\x20\x20\x20\x20',
        'ate_trunc(',
        'manda_ativ',
        'createdAt\x22',
        't\x22/1000),\x20',
        'ceivedTran',
        'se\x20when\x20t.',
        'eferencia,',
        'ontacts\x0a\x20\x20',
        'esc\x0a',
        'erty',
        'danceAt,\x0a\x20',
        ',\x20c.\x22creat',
        '\x22\x0a\x20\x20\x20\x20from',
        '(AVG(tma):',
        '1000),\x20t.\x22',
        ':endDate\x0a\x20',
        'mand\x22\x20is\x20n',
        '(\x27day\x27,\x20t.',
        'zhuoS',
        '\x20t\x0a\x20\x20\x20\x20INN',
        'mp)::inter',
        '\x20=\x20:tenant',
        'G(tme)::de',
        'artedAtten',
        'te\x20and\x20:en',
        'rtDate\x20and',
        'demanda_re',
        'c(\x27day\x27,\x20t',
        '/1000)\x20sta',
        'losedAt,\x0a\x20',
        'tma,\x0a\x20\x20\x20\x20\x20',
        'hen\x201\x20else',
        '\x22Tickets\x22\x20',
        'a\x0a\x20\x20\x20\x20\x20\x20or',
        '\x20\x20\x20where\x0a\x20',
        '\x20\x20\x20\x20\x20t.\x22cr',
        'acts\x22\x20c\x0a\x20\x20',
        'AGE(to_tim',
        '\x20\x20\x20\x20where\x0a',
        '\x20\x20\x20\x20\x20\x20\x20\x20c.',
        'mand\x22\x20is\x20t',
        '\x20extract(e',
        ')::decimal',
        'ween\x20:star',
        '\x22::timesta',
        'OR\x20lt.\x22typ',
        'ferencia,\x0a',
        '55364IcJWSV',
        'lect\x20count',
        '\x20\x20\x20\x20\x201\x20qtd',
        '),\x200),\x20\x27mi',
        ':decimal,0',
        '\x22isActiveD',
        ':interval\x20',
        '\x20(\x0a\x20\x20\x20\x20sel',
        'replacemen',
        '\x20and\x20date_',
        'true\x20then\x20',
        'VG(tme)::d',
        'rom\x20AGE(to',
        '\x22\x0a\x20\x20\x20\x20\x20\x20wh',
        'admin',
        '\x20date_trun',
        '_total_ate',
        'At\x22)::inte',
        '40ZBprtH',
        ':tenantId\x0a',
        'erval)/60\x20',
        'emanda_ati',
        'ltc\x20ON\x20ltc',
        't\x22/1000)\x20c',
        '\x20sum(qtd_d',
        'runc(\x27day\x27',
        'ndanceAt\x22/',
        '_timestamp',
        '\x22Contacts\x22',
        '\x20\x20and\x20(lt.',
        'ct\x0a\x20\x20\x20\x20\x20\x20d',
        'userId\x0a\x20\x20\x20',
        'nterval\x20TM',
        't.\x22closedA',
        'tendanceAt',
        '\x22\x20LIKE\x20\x27re',
        'Desc\x0a',
        '(t.\x22closed',
        '\x20\x20\x20\x20\x20from\x20',
        'nutes\x27)::i',
        'a,\x0a\x20\x20\x20\x20sum',
        '\x27,\x20c.\x22crea',
        '(\x0a\x20\x20\x20\x20sele',
        '_demanda_r',
        'minutes\x27):',
        '\x0a\x20\x20\x20\x20sum(q',
        '\x0a\x20\x20\x20\x20\x20\x20to_',
        '::timestam',
        'NNER\x20JOIN\x20',
        'anceAt,\x0a\x20\x20',
        'e\x20and\x20:end',
        'and\x20date_t',
        'TME\x0a\x20\x20from',
        'date_trunc',
        'R\x20JOIN\x20\x22Lo',
        'roup\x20by\x20dt',
        't\x0a\x20\x20\x20\x20INNE',
        '10917FfKvWu',
        '\x20\x20\x20\x20\x20\x20and\x20',
        '\x20\x20\x20\x20\x20t.\x22te',
        '\x20\x20\x20\x20\x20\x20t.\x22c',
        'tartedAtte',
        'dAt\x22)::int',
        'erencia,\x0a\x20',
        'd\x20qtd_dema',
        'serId\x22\x20=\x20:',
        'da_recepti',
        '\x0a\x20\x20\x20\x20from\x20',
        'dDate\x0a\x20\x20\x20\x20',
        'ogTickets\x22',
        '=\x20t.\x22id\x22\x0a\x20',
        '\x20:startDat',
        '(qtd_deman',
        'ecimal,0)\x20',
        '\x22startedAt',
        'och\x20from\x20A',
        '\x20\x20\x20\x20\x20\x20t.\x22t',
        '\x20coalesce(',
        '\x20\x20\x20)\x20new_c',
        'al_atendim',
        '\x20\x20\x20and\x20(lt',
        'ER\x20JOIN\x20\x22L',
        'ia\x0a\x20\x20\x20\x20\x20\x20o',
        'der\x20by\x201\x20D',
        '\x22)\x20between',
        '\x20\x20\x20\x20\x20and\x20l',
        '\x20=\x20c.\x22id\x22\x0a',
        '\x200\x20end\x20qtd',
        'va)\x20qtd_de',
        'poch\x20from\x20',
        'endimentos',
        'e\x22\x20LIKE\x20\x27r',
        'eceivedTra',
        'osedAt,\x0a\x20\x20',
        '\x22/1000)\x20st',
        'fault',
        '\x0a\x20\x20select\x0a',
        'ptiva,\x0a\x20\x20\x20',
        'ot\x20true\x20th',
        'Id\x0a\x20\x20\x20\x20\x20\x20\x20',
        'default',
        'contacts\x0a\x20',
        '\x22ticketId\x22',
        '--ROUND(AV',
        'eatedAt\x22,\x0a',
        't(epoch\x20fr',
        ',\x0a\x20\x20\x20\x20\x20\x20ca',
        'startDate',
        ')\x20TMA,\x0a\x20\x20\x20',
        'endDate',
        'rue\x20then\x201',
        '310bhqpQa',
        'e\x20when\x20t.\x22',
        'nsfer\x27)\x0a\x20\x20',
        'ME\x0a\x20\x20from\x20',
        '\x20\x20\x20\x20\x20\x201\x20qt',
        'tenantId',
        'val)/60\x20tm',
        '7419720EzDUPU',
        '\x20c\x0a\x20\x20\x20\x20\x20\x20I',
        't_referenc',
        '\x20:endDate\x0a',
        '_referenci',
        '1393hZCHgI',
        'contactId\x22',
        'ND(AVG(tma',
        ',\x0a\x20\x20\x20\x20\x20\x20t.',
        '\x20and\x20lt.\x22u',
        '1578658pDQeFw',
        '\x20TMA,\x0a\x20\x20\x20\x20',
        'E\x20\x27open\x27\x20O',
        'timestamp(',
        '\x20\x20\x20\x20)\x20new_',
        'nantId\x22\x20=\x20',
        'AVG(tma)::',
        '\x20\x20c.\x22tenan',
        ',0),\x200),\x20\x27',
        'type',
        'QueryTypes',
        'om\x20AGE(to_',
        'imestamp(t',
        'ndimentos,',
        '\x20\x20\x20\x20to_tim',
        '(1)\x0a\x20\x20\x20\x20\x20\x20',
        '\x20a\x0a\x20\x20\x20\x20--g',
        '\x22\x20=\x20:userI',
        'sequelize',
        '\x22/1000)\x20cl',
        '\x20=\x20t.\x22id\x22\x0a'
    ];
    a = function () {
        return z;
    };
    return a();
}
function b(c, d) {
    const e = a();
    return b = function (f, g) {
        f = f - (0x25e9 + 0xb * -0x37f + -0x262 * -0x1);
        let h = e[f];
        return h;
    }, b(c, d);
}
const u = b, v = b;
(function (c, d) {
    const s = b, t = b, e = c();
    while (!![]) {
        try {
            const f = -parseInt(s(0x236)) / (0x157e + -0x1 * 0x24d8 + 0x1 * 0xf5b) + -parseInt(s(0x288)) / (-0x28d * -0xb + 0x35e * 0x6 + -0x463 * 0xb) * (-parseInt(t(0x25c)) / (0x14fb * -0x1 + -0x1 * 0x1f6f + 0x346d)) + -parseInt(t(0x2ec)) / (-0x5a6 + -0x1 * -0x1876 + -0x12cc) * (-parseInt(s(0x225)) / (0xdff + -0x2653 + -0x1 * -0x1859)) + parseInt(t(0x285)) / (0x19bf + 0x6fd + -0x4f * 0x6a) * (-parseInt(t(0x231)) / (0x1d6 + -0x3 * 0x20e + 0x45b)) + -parseInt(t(0x2fe)) / (-0x1a28 + 0xaf7 + 0x1 * 0xf39) * (-parseInt(t(0x1ef)) / (0x1a2 + 0x832 + 0x9cb * -0x1)) + -parseInt(s(0x22c)) / (0x9ee + -0x10c5 + 0x6e1) + parseInt(t(0x258)) / (-0x19e6 + -0x1b64 + 0x3555);
            if (f === d)
                break;
            else
                e['push'](e['shift']());
        } catch (g) {
            e['push'](e['shift']());
        }
    }
}(a, 0x23b56 + -0x2 * 0x1d465 + -0x114 * -0xcf5));
var __importDefault = this && this[u(0x2b4) + v(0x215)] || function (c) {
    const w = u;
    return c && c[w(0x29f)] ? c : { 'default': c };
};
const k = {};
k[u(0x279)] = !![], Object[v(0x2b2) + v(0x2c6)](exports, u(0x29f), k);
const sequelize_1 = require(v(0x248)), database_1 = __importDefault(require(u(0x261) + v(0x2b1))), query = u(0x216) + v(0x2a0) + v(0x2c3) + v(0x1e3) + u(0x266) + u(0x280) + v(0x250) + v(0x205) + u(0x2b6) + u(0x304) + v(0x301) + v(0x20e) + u(0x2be) + v(0x1de) + u(0x1fe) + u(0x1f8) + v(0x20e) + u(0x25d) + v(0x217) + u(0x203) + u(0x274) + u(0x233) + u(0x2e7) + v(0x23e) + u(0x1e2) + u(0x2f2) + v(0x257) + u(0x269) + v(0x2ae) + u(0x291) + u(0x2f0) + u(0x2ef) + u(0x1dd) + v(0x1d6) + v(0x2a5) + v(0x2ed) + v(0x2ad) + v(0x251) + u(0x1dc) + v(0x308) + v(0x22d) + v(0x1e6) + v(0x2dd) + u(0x271) + u(0x232) + v(0x20c) + v(0x2a4) + u(0x1ec) + v(0x25e) + v(0x302) + v(0x2a8) + u(0x2af) + v(0x2f9) + u(0x29c) + u(0x23d) + u(0x29e) + v(0x255) + v(0x20b) + v(0x292) + v(0x247) + v(0x2bc) + u(0x1e9) + v(0x305) + v(0x2c8) + u(0x29b) + u(0x2e8) + v(0x26b) + u(0x2cc) + u(0x204) + v(0x2c4) + v(0x281) + v(0x23c) + v(0x2ba) + u(0x237) + u(0x21d) + v(0x2d3) + v(0x27d) + u(0x228) + u(0x1e0) + v(0x30a) + u(0x2bd) + u(0x294) + u(0x272) + u(0x2a7) + u(0x1f5) + u(0x2ee) + u(0x2fc) + u(0x243) + u(0x27f) + v(0x226) + v(0x283) + v(0x2e5) + v(0x224) + u(0x256) + v(0x1f6) + u(0x26c) + v(0x27f) + u(0x226) + v(0x283) + u(0x2cd) + (u(0x218) + v(0x29a) + u(0x27a) + v(0x2d7) + v(0x260) + v(0x2e0) + u(0x21e) + v(0x264) + v(0x242) + v(0x28b) + v(0x249) + u(0x213) + v(0x244) + u(0x299) + v(0x2b9) + u(0x276) + v(0x2d9) + u(0x262) + v(0x1e7) + v(0x24b) + u(0x21f) + u(0x241) + u(0x239) + v(0x1d7) + u(0x2c0) + v(0x28a) + u(0x2fd) + u(0x27e) + u(0x2a6) + v(0x268) + u(0x201) + u(0x289) + u(0x26d) + v(0x1f3) + u(0x306) + u(0x2cb) + u(0x2bf) + v(0x1e5) + u(0x293) + v(0x252) + u(0x234) + u(0x2a1) + u(0x1f9) + u(0x2dd) + v(0x1ee) + v(0x1ec) + u(0x25e) + u(0x298) + u(0x287) + v(0x1fc) + u(0x2df) + u(0x1f1) + u(0x23b) + v(0x2ff) + u(0x1f0) + u(0x1eb) + u(0x2ce) + v(0x24d) + u(0x20a) + u(0x1fd) + u(0x1e8) + u(0x273) + u(0x235) + v(0x1f7) + v(0x30b) + v(0x206) + u(0x275) + v(0x265) + v(0x2ea) + u(0x211) + u(0x212) + u(0x227) + v(0x25f) + u(0x25b) + v(0x22e) + v(0x208) + u(0x2ab) + u(0x1da)), queryAdmin = u(0x216) + u(0x2a0) + v(0x2c3) + v(0x1e3) + u(0x266) + u(0x280) + u(0x250) + v(0x205) + v(0x2b6) + v(0x304) + u(0x301) + v(0x20e) + u(0x2be) + u(0x1de) + v(0x1fe) + v(0x1f8) + u(0x20e) + v(0x25d) + v(0x217) + v(0x203) + v(0x274) + v(0x233) + v(0x2e7) + v(0x23e) + u(0x1e2) + v(0x2f2) + v(0x257) + u(0x269) + v(0x2ae) + v(0x291) + v(0x2f0) + v(0x2ef) + v(0x1dd) + v(0x1d6) + u(0x2a5) + v(0x2ed) + u(0x245) + v(0x25a) + u(0x2e1) + v(0x2e3) + v(0x2e4) + u(0x2a1) + u(0x2d2) + u(0x219) + v(0x2f5) + v(0x2b8) + u(0x1df) + u(0x27b) + u(0x2aa) + v(0x2d6) + u(0x22f) + u(0x23a) + u(0x21b) + u(0x24e) + u(0x2ca) + u(0x2f0) + v(0x222) + v(0x259) + v(0x2f7) + u(0x1ff) + u(0x1ea) + v(0x2f3) + u(0x26a) + v(0x1eb) + v(0x26f) + u(0x28a) + v(0x267) + v(0x2eb) + v(0x229) + u(0x28d) + u(0x210) + v(0x220) + v(0x2c2) + v(0x2f1) + u(0x270) + v(0x2f6) + v(0x263) + v(0x2a2) + v(0x295) + u(0x220) + v(0x2c2) + v(0x2f1) + u(0x270) + u(0x290) + v(0x2dc) + v(0x20d) + v(0x1e1) + u(0x282) + u(0x1f2) + v(0x27c) + u(0x1e4) + u(0x239) + u(0x1d7) + u(0x303) + v(0x2da) + u(0x286) + u(0x28c) + v(0x200) + u(0x1d8) + u(0x214) + (u(0x2d4) + v(0x2c7) + u(0x2a9) + v(0x277) + u(0x2f8) + v(0x307) + u(0x1db) + v(0x2b5) + u(0x2b7) + v(0x1f4) + v(0x300) + v(0x2db) + u(0x2e6) + v(0x20f) + u(0x2e2) + v(0x299) + v(0x2b9) + u(0x276) + v(0x2a3) + v(0x24d) + u(0x2e9) + v(0x2d1) + u(0x22b) + v(0x29d) + u(0x284) + v(0x2c9) + u(0x28e) + u(0x2d0) + u(0x207) + v(0x1fb) + u(0x24f) + v(0x21c) + v(0x24a) + v(0x2e3) + u(0x202) + v(0x26e) + v(0x28f) + u(0x278) + v(0x2fb) + v(0x2d8) + u(0x272) + v(0x2ac) + v(0x296) + v(0x2d5) + u(0x1fa) + v(0x309) + v(0x2b3) + u(0x238) + v(0x24c) + u(0x1d9) + v(0x2c1) + u(0x254) + u(0x246) + u(0x1ed) + v(0x230) + v(0x2de) + v(0x209) + u(0x2c5)), DashTicketsAndTimes = async ({
        startDate: f,
        endDate: g,
        tenantId: h,
        userId: i,
        userProfile: j
    }) => {
        const x = u, y = u, l = {};
        l[x(0x253)] = function (q, r) {
            return q == r;
        }, l[x(0x2cf)] = y(0x2fa);
        const m = l, n = {};
        n[y(0x22a)] = h, n[x(0x221)] = f, n[y(0x223)] = g, n[x(0x2b0)] = i;
        const o = {};
        o[y(0x2f4) + 'ts'] = n, o[y(0x23f)] = sequelize_1[x(0x240)][y(0x2bb)];
        const p = await database_1[y(0x21a)][x(0x297)](m[y(0x253)](j, m[y(0x2cf)]) ? queryAdmin : query, o);
        return p;
    };
exports[u(0x21a)] = DashTicketsAndTimes;